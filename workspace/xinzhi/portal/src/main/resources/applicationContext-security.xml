<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd"
	default-lazy-init="true">

	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl" value="/login_view" />
		<property name="successUrl" value="/frame" />
		<property name="unauthorizedUrl" value="/common/403.jsp" />
		<property name="filterChainDefinitionMap" ref="definitionMetaSource" />
	</bean>

	<bean id="definitionMetaSource"
		class="cn.newtouch.application.security.shiro.ShiroDefinitionSectionMetaSource">
		<property name="filterChainDefinitions">
			<value>
				/login_view = anon
				/login = anon
				/logout = logout
				/styles/** = anon
				/scripts/** = anon
				/common/** = anon
				/frame = authc
				/welcome = authc
				/resources = authc
			</value>
		</property>
		<property name="resourceService" ref="resourceService" />
	</bean>

	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="dbRealm" />
		<property name="sessionMode" value="http" />
		<!-- redis缓存 -->
		<!-- <property name="cacheManager" ref="redisCacheManager" /> -->
		<!-- sessionManager -->
		<!-- <property name="sessionManager" ref="sessionManager" /> -->
	</bean>

	<!-- 自定义redisManager-redis -->
	<bean id="redisCacheManager" class="cn.newtouch.framework.shiro.RedisCacheManager">
		<property name="redisManager" ref="redisManager" />
	</bean>
	<!-- 自定义cacheManager -->
	<bean id="redisCache" class="cn.newtouch.framework.cache.RedisCache">
		<constructor-arg ref="redisManager"></constructor-arg>
	</bean>

	<!-- <bean id="redisManager" class="cn.newtouch.framework.cache.RedisManager"></bean> -->

	<!-- session会话存储的实现类 -->
	<!-- <bean id="redisShiroSessionDAO" class="cn.newtouch.framework.shiro.RedisSessionDAO">
		<property name="redisManager" ref="redisManager" />
	</bean> -->

	<!-- sessionManager -->
	<!-- session管理器 -->
	<!-- <bean id="sessionManager"
		class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
		<property name="globalSessionTimeout" value="1800000" />
		<property name="deleteInvalidSessions" value="true" />
		<property name="sessionValidationInterval" value="1800000" />
		<property name="sessionDAO" ref="redisShiroSessionDAO" />
		<property name="sessionIdCookie" ref="sharesession" />
		<property name="sessionValidationSchedulerEnabled" value="true" />
	</bean> -->


	<!-- sessionIdCookie的实现,用于重写覆盖容器默认的JSESSIONID -->
	<!-- <bean id="sharesession" class="org.apache.shiro.web.servlet.SimpleCookie">
		<constructor-arg name="name" value="SHAREJSESSIONID" />
		<property name="path" value="/" />
		<property name="httpOnly" value="true" />
	</bean> -->

	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />

	<bean id="dbRealm"
		class="cn.newtouch.application.security.shiro.ShiroAuthorizingRealm">
		<property name="userService" ref="userService" />
		<property name="authorityService" ref="authorityService" />
	</bean>

	<!-- <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean"> 
		<property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager" 
		/> <property name="arguments" ref="securityManager" /> </bean> -->

</beans>
